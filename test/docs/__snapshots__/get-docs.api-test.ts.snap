// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GET /openapi/json matches the snapshot 1`] = `"{"openapi":"3.0.0","paths":{"/api/v1/sites/{siteId}/deals/{dealId}/documents":{"post":{"operationId":"DealFolderController_uploadFileInDealFolder","summary":"Upload a file in the deal folder.","parameters":[{"name":"siteId","required":true,"in":"path","description":"The site identifier returned when the site was created by POST /sites.","example":"00700001","schema":{"minLength":0,"type":"string"}},{"name":"dealId","required":true,"in":"path","description":"The identifier of the deal.","example":"0030000321","schema":{"minLength":10,"maxLength":10,"pattern":"^00\\\\d{8}$","type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UploadFileInDealFolderRequestItem"}}}}},"responses":{"201":{"description":"File has been uploaded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UploadFileInDealFolderResponseDto"}}}},"400":{"description":"Bad request."},"401":{"description":"Unauthorized."},"500":{"description":"An internal server error has occurred."}}}},"/api/v1/sites":{"get":{"operationId":"SiteController_getSiteStatusByExporterName","summary":"Get the site status by exporter name.","parameters":[{"name":"exporterName","required":true,"in":"query","description":"The name of the exporter used in the deal.","example":"Example Name Limited","schema":{"minLength":1,"maxLength":250,"pattern":"^[\\\\w\\\\-.()\\\\s]+$","type":"string"}}],"responses":{"200":{"description":"Site has been created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetSiteStatusByExporterNameResponse"}}}},"202":{"description":"Site is provisioning.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetSiteStatusByExporterNameResponse"}}}},"400":{"description":"Bad request."},"401":{"description":"Unauthorized."},"404":{"description":"Site not found."},"424":{"description":"Site has failed to be created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetSiteStatusByExporterNameResponse"}}}},"500":{"description":"An internal server error has occurred."}}},"post":{"operationId":"SiteController_createSite","summary":"Start creation of new sharepoint site for exporter","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}},"responses":{"200":{"description":"Site has been created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSiteResponse"}}}},"202":{"description":"Site is provisioning","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSiteResponse"}}}},"400":{"description":"Bad request."},"401":{"description":"Unauthorized"},"424":{"description":"Site has failed to be created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSiteResponse"}}}},"500":{"description":"An internal server error has occurred."}}}},"/api/v1/sites/{siteId}/deals/{dealId}/facilities":{"post":{"operationId":"SiteDealController_createFacilityFolder","summary":"Creates a facility folder for a deal","parameters":[{"name":"siteId","required":true,"in":"path","description":"The site identifier returned when the site was created by POST /sites.","example":"00700001","schema":{"minLength":8,"maxLength":8,"pattern":"^0070\\\\d{4}$","type":"string"}},{"name":"dealId","required":true,"in":"path","description":"The identifier of the deal.","example":"0030000321","schema":{"minLength":10,"maxLength":10,"pattern":"^00\\\\d{8}$","type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CreateFacilityFolderRequestItem"}}}}},"responses":{"201":{"description":"The creation of the facility folder has been scheduled successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFolderResponseDto"}}}},"400":{"description":"Bad request."},"401":{"description":"Unauthorized."},"500":{"description":"An internal server error has occurred."}}}},"/api/v1/sites/{siteId}/deals":{"post":{"operationId":"SiteDealController_createDealFolder","summary":"Creates a deal folder.","parameters":[{"name":"siteId","required":true,"in":"path","description":"The site identifier returned when the site was created by POST /sites.","example":"00700001","schema":{"minLength":8,"maxLength":8,"pattern":"^0070\\\\d{4}$","type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CreateDealFolderRequestItem"}}}}},"responses":{"201":{"description":"The creation of the deal folder has been scheduled successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFolderResponseDto"}}}},"400":{"description":"Bad request."},"401":{"description":"Unauthorized."},"500":{"description":"An internal server error has occurred."}}}},"/api/v1/terms/facilities":{"post":{"operationId":"TermsController_postFacilityToTermStore","summary":"Add a new facility ID to term store.","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CreateFacilityTermRequestItem"}}}}},"responses":{"200":{"description":"Facility Term already exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTermFacilityResponse"}}}},"201":{"description":"Facility Term created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTermFacilityResponse"}}}},"400":{"description":"Bad request."},"404":{"description":"The facility ID was not found."},"500":{"description":"An internal server error has occurred."}}}},"/api/v1/sites/{siteId}/buyers":{"post":{"operationId":"SiteBuyerController_createBuyerFolder","summary":"Creates a buyer folder.","parameters":[{"name":"siteId","required":true,"in":"path","description":"The identifier of the site.","example":"00700001","schema":{"minLength":8,"maxLength":8,"pattern":"^0070\\\\d{4}$","type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CreateBuyerFolderRequestItem"}}}}},"responses":{"201":{"description":"The creation of the buyer folder has been scheduled successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateBuyerFolderResponseDto"}}}},"400":{"description":"Bad request."},"401":{"description":"Unauthorized"},"500":{"description":"An internal server error has occurred."}}}}},"info":{"title":"ESTORE API Specification","description":"ESTORE API documentation","version":"1.0","contact":{}},"tags":[],"servers":[],"components":{"securitySchemes":{"ApiKeyHeader":{"type":"apiKey","in":"header","name":"x-api-key"}},"schemas":{"UploadFileInDealFolderRequestItem":{"type":"object","properties":{"buyerName":{"type":"string","description":"The name of the buyer used in the deal.","minLength":1,"maxLength":250,"pattern":"^(?!\\\\s)[\\\\w\\\\-.()\\\\s]+(?<![\\\\s.])$","example":"Example Buyer"},"documentType":{"type":"string","description":"The ESTORE document type.","minLength":0,"enum":["Exporter_questionnaire","Audited_financial_statements","Year_to_date_management","Financial_forecasts","Financial_information_commentary","Corporate_structure"],"example":"Audited_financial_statements"},"fileName":{"type":"string","description":"The file name with the file extension.","minLength":1,"maxLength":250,"pattern":"^(?!\\\\s)[\\\\w\\\\-.()\\\\s]+(?<![\\\\s.])$"},"fileLocationPath":{"type":"string","description":"The path of the location/folder in Azure storage from which the file needs to be loaded.","minLength":1,"maxLength":250,"pattern":"^[\\\\w\\\\-:/\\\\\\\\()\\\\s]+$"}},"required":["buyerName","documentType","fileName","fileLocationPath"]},"UploadFileInDealFolderResponseDto":{"type":"object","properties":{"fileUpload":{"type":"string","description":"The path to the file in SharePoint.","minLength":0,"example":"/sites/00700001/CaseLibrary/Example Buyer/D 0030000321/undefined"}},"required":["fileUpload"]},"GetSiteStatusByExporterNameResponse":{"type":"object","properties":{"siteId":{"type":"string","readOnly":true,"example":"00700001"},"status":{"type":"string","readOnly":true,"example":"Created","enum":["Created","Provisioning","Failed"]}},"required":["siteId","status"]},"CreateSiteResponse":{"type":"object","properties":{"siteId":{"type":"string","readOnly":true,"example":"00700001"},"status":{"type":"string","readOnly":true,"example":"Created","enum":["Created","Provisioning","Failed"]}},"required":["siteId","status"]},"CreateFacilityFolderRequestItem":{"type":"object","properties":{"exporterName":{"type":"string","description":"The name of the exporter used in the deal.","minLength":1,"maxLength":250,"pattern":"^[\\\\w\\\\-.()\\\\s]+$","example":"Example Exporter"},"buyerName":{"type":"string","description":"The name of the buyer used in the deal.","minLength":1,"maxLength":250,"pattern":"^[\\\\w\\\\-.()\\\\s]+$","example":"Example Buyer"},"facilityIdentifier":{"type":"string","description":"The identifier of the facility.","minLength":10,"maxLength":10,"pattern":"^00\\\\d{8}$","example":"0030000322"}},"required":["exporterName","buyerName","facilityIdentifier"]},"CreateFolderResponseDto":{"type":"object","properties":{"folderName":{"type":"string","description":"The name of the created folder.","example":"Example folder name"}},"required":["folderName"]},"CreateDealFolderRequestItem":{"type":"object","properties":{"dealIdentifier":{"type":"string","description":"The identifier of the deal.","minLength":10,"maxLength":10,"pattern":"^00\\\\d{8}$","example":"0030000321"},"buyerName":{"type":"string","description":"The name of the buyer used in the deal.","minLength":1,"maxLength":250,"pattern":"^[\\\\w\\\\-.()\\\\s]+$","example":"Example Buyer"},"exporterName":{"type":"string","description":"The name of the exporter used in the deal.","minLength":1,"maxLength":250,"pattern":"^[\\\\w\\\\-.()\\\\s]+$","example":"Example Exporter"},"destinationMarket":{"type":"string","description":"The country name of the destination market of the deal.","minLength":1,"maxLength":250,"pattern":"^[\\\\w\\\\-.()\\\\s]+$","example":"Germany"},"riskMarket":{"type":"string","description":"The country name of the risk market of the deal.","minLength":1,"maxLength":250,"pattern":"^[\\\\w\\\\-.()\\\\s]+$","example":"Germany"}},"required":["dealIdentifier","buyerName","exporterName","destinationMarket","riskMarket"]},"CreateFacilityTermRequestItem":{"type":"object","properties":{"id":{"type":"string","description":"The facility ID to create in termStore.","minLength":10,"maxLength":10,"pattern":"^00\\\\d{8}$","example":"0030000322"}},"required":["id"]},"CreateTermFacilityResponse":{"type":"object","properties":{"message":{"type":"string","example":"Facility Term created","description":"Response message for successful call","enum":["Facility Term created","Facility Term already exists"]}},"required":["message"]},"CreateBuyerFolderRequestItem":{"type":"object","properties":{"exporterName":{"type":"string","description":"The name of the exporter used in the deal.","minLength":1,"maxLength":250,"pattern":"^[\\\\w\\\\-.()\\\\s]+$","example":"Example Exporter"},"buyerName":{"type":"string","description":"The name of the buyer used in the deal.","minLength":1,"maxLength":250,"pattern":"^[\\\\w\\\\-.()\\\\s]+$","example":"Example Buyer"}},"required":["exporterName","buyerName"]},"CreateBuyerFolderResponseDto":{"type":"object","properties":{"buyerName":{"type":"string","readOnly":true,"example":"Example Buyer"}},"required":["buyerName"]}}},"security":[{"ApiKeyHeader":[]}]}"`;

exports[`GET /openapi/yaml matches the snapshot 1`] = `
"openapi: 3.0.0
paths:
  /api/v1/sites/{siteId}/deals/{dealId}/documents:
    post:
      operationId: DealFolderController_uploadFileInDealFolder
      summary: Upload a file in the deal folder.
      parameters:
        - name: siteId
          required: true
          in: path
          description: >-
            The site identifier returned when the site was created by POST
            /sites.
          example: '00700001'
          schema:
            minLength: 0
            type: string
        - name: dealId
          required: true
          in: path
          description: The identifier of the deal.
          example: '0030000321'
          schema:
            minLength: 10
            maxLength: 10
            pattern: ^00\\d{8}$
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UploadFileInDealFolderRequestItem'
      responses:
        '201':
          description: File has been uploaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFileInDealFolderResponseDto'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '500':
          description: An internal server error has occurred.
  /api/v1/sites:
    get:
      operationId: SiteController_getSiteStatusByExporterName
      summary: Get the site status by exporter name.
      parameters:
        - name: exporterName
          required: true
          in: query
          description: The name of the exporter used in the deal.
          example: Example Name Limited
          schema:
            minLength: 1
            maxLength: 250
            pattern: ^[\\w\\-.()\\s]+$
            type: string
      responses:
        '200':
          description: Site has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSiteStatusByExporterNameResponse'
        '202':
          description: Site is provisioning.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSiteStatusByExporterNameResponse'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '404':
          description: Site not found.
        '424':
          description: Site has failed to be created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSiteStatusByExporterNameResponse'
        '500':
          description: An internal server error has occurred.
    post:
      operationId: SiteController_createSite
      summary: Start creation of new sharepoint site for exporter
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Site has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSiteResponse'
        '202':
          description: Site is provisioning
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSiteResponse'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized
        '424':
          description: Site has failed to be created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSiteResponse'
        '500':
          description: An internal server error has occurred.
  /api/v1/sites/{siteId}/deals/{dealId}/facilities:
    post:
      operationId: SiteDealController_createFacilityFolder
      summary: Creates a facility folder for a deal
      parameters:
        - name: siteId
          required: true
          in: path
          description: >-
            The site identifier returned when the site was created by POST
            /sites.
          example: '00700001'
          schema:
            minLength: 8
            maxLength: 8
            pattern: ^0070\\d{4}$
            type: string
        - name: dealId
          required: true
          in: path
          description: The identifier of the deal.
          example: '0030000321'
          schema:
            minLength: 10
            maxLength: 10
            pattern: ^00\\d{8}$
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateFacilityFolderRequestItem'
      responses:
        '201':
          description: The creation of the facility folder has been scheduled successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFolderResponseDto'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '500':
          description: An internal server error has occurred.
  /api/v1/sites/{siteId}/deals:
    post:
      operationId: SiteDealController_createDealFolder
      summary: Creates a deal folder.
      parameters:
        - name: siteId
          required: true
          in: path
          description: >-
            The site identifier returned when the site was created by POST
            /sites.
          example: '00700001'
          schema:
            minLength: 8
            maxLength: 8
            pattern: ^0070\\d{4}$
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateDealFolderRequestItem'
      responses:
        '201':
          description: The creation of the deal folder has been scheduled successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFolderResponseDto'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '500':
          description: An internal server error has occurred.
  /api/v1/terms/facilities:
    post:
      operationId: TermsController_postFacilityToTermStore
      summary: Add a new facility ID to term store.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateFacilityTermRequestItem'
      responses:
        '200':
          description: Facility Term already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTermFacilityResponse'
        '201':
          description: Facility Term created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTermFacilityResponse'
        '400':
          description: Bad request.
        '404':
          description: The facility ID was not found.
        '500':
          description: An internal server error has occurred.
  /api/v1/sites/{siteId}/buyers:
    post:
      operationId: SiteBuyerController_createBuyerFolder
      summary: Creates a buyer folder.
      parameters:
        - name: siteId
          required: true
          in: path
          description: The identifier of the site.
          example: '00700001'
          schema:
            minLength: 8
            maxLength: 8
            pattern: ^0070\\d{4}$
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateBuyerFolderRequestItem'
      responses:
        '201':
          description: The creation of the buyer folder has been scheduled successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBuyerFolderResponseDto'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized
        '500':
          description: An internal server error has occurred.
info:
  title: ESTORE API Specification
  description: ESTORE API documentation
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    ApiKeyHeader:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    UploadFileInDealFolderRequestItem:
      type: object
      properties:
        buyerName:
          type: string
          description: The name of the buyer used in the deal.
          minLength: 1
          maxLength: 250
          pattern: ^(?!\\s)[\\w\\-.()\\s]+(?<![\\s.])$
          example: Example Buyer
        documentType:
          type: string
          description: The ESTORE document type.
          minLength: 0
          enum:
            - Exporter_questionnaire
            - Audited_financial_statements
            - Year_to_date_management
            - Financial_forecasts
            - Financial_information_commentary
            - Corporate_structure
          example: Audited_financial_statements
        fileName:
          type: string
          description: The file name with the file extension.
          minLength: 1
          maxLength: 250
          pattern: ^(?!\\s)[\\w\\-.()\\s]+(?<![\\s.])$
        fileLocationPath:
          type: string
          description: >-
            The path of the location/folder in Azure storage from which the file
            needs to be loaded.
          minLength: 1
          maxLength: 250
          pattern: ^[\\w\\-:/\\\\()\\s]+$
      required:
        - buyerName
        - documentType
        - fileName
        - fileLocationPath
    UploadFileInDealFolderResponseDto:
      type: object
      properties:
        fileUpload:
          type: string
          description: The path to the file in SharePoint.
          minLength: 0
          example: /sites/00700001/CaseLibrary/Example Buyer/D 0030000321/undefined
      required:
        - fileUpload
    GetSiteStatusByExporterNameResponse:
      type: object
      properties:
        siteId:
          type: string
          readOnly: true
          example: '00700001'
        status:
          type: string
          readOnly: true
          example: Created
          enum:
            - Created
            - Provisioning
            - Failed
      required:
        - siteId
        - status
    CreateSiteResponse:
      type: object
      properties:
        siteId:
          type: string
          readOnly: true
          example: '00700001'
        status:
          type: string
          readOnly: true
          example: Created
          enum:
            - Created
            - Provisioning
            - Failed
      required:
        - siteId
        - status
    CreateFacilityFolderRequestItem:
      type: object
      properties:
        exporterName:
          type: string
          description: The name of the exporter used in the deal.
          minLength: 1
          maxLength: 250
          pattern: ^[\\w\\-.()\\s]+$
          example: Example Exporter
        buyerName:
          type: string
          description: The name of the buyer used in the deal.
          minLength: 1
          maxLength: 250
          pattern: ^[\\w\\-.()\\s]+$
          example: Example Buyer
        facilityIdentifier:
          type: string
          description: The identifier of the facility.
          minLength: 10
          maxLength: 10
          pattern: ^00\\d{8}$
          example: '0030000322'
      required:
        - exporterName
        - buyerName
        - facilityIdentifier
    CreateFolderResponseDto:
      type: object
      properties:
        folderName:
          type: string
          description: The name of the created folder.
          example: Example folder name
      required:
        - folderName
    CreateDealFolderRequestItem:
      type: object
      properties:
        dealIdentifier:
          type: string
          description: The identifier of the deal.
          minLength: 10
          maxLength: 10
          pattern: ^00\\d{8}$
          example: '0030000321'
        buyerName:
          type: string
          description: The name of the buyer used in the deal.
          minLength: 1
          maxLength: 250
          pattern: ^[\\w\\-.()\\s]+$
          example: Example Buyer
        exporterName:
          type: string
          description: The name of the exporter used in the deal.
          minLength: 1
          maxLength: 250
          pattern: ^[\\w\\-.()\\s]+$
          example: Example Exporter
        destinationMarket:
          type: string
          description: The country name of the destination market of the deal.
          minLength: 1
          maxLength: 250
          pattern: ^[\\w\\-.()\\s]+$
          example: Germany
        riskMarket:
          type: string
          description: The country name of the risk market of the deal.
          minLength: 1
          maxLength: 250
          pattern: ^[\\w\\-.()\\s]+$
          example: Germany
      required:
        - dealIdentifier
        - buyerName
        - exporterName
        - destinationMarket
        - riskMarket
    CreateFacilityTermRequestItem:
      type: object
      properties:
        id:
          type: string
          description: The facility ID to create in termStore.
          minLength: 10
          maxLength: 10
          pattern: ^00\\d{8}$
          example: '0030000322'
      required:
        - id
    CreateTermFacilityResponse:
      type: object
      properties:
        message:
          type: string
          example: Facility Term created
          description: Response message for successful call
          enum:
            - Facility Term created
            - Facility Term already exists
      required:
        - message
    CreateBuyerFolderRequestItem:
      type: object
      properties:
        exporterName:
          type: string
          description: The name of the exporter used in the deal.
          minLength: 1
          maxLength: 250
          pattern: ^[\\w\\-.()\\s]+$
          example: Example Exporter
        buyerName:
          type: string
          description: The name of the buyer used in the deal.
          minLength: 1
          maxLength: 250
          pattern: ^[\\w\\-.()\\s]+$
          example: Example Buyer
      required:
        - exporterName
        - buyerName
    CreateBuyerFolderResponseDto:
      type: object
      properties:
        buyerName:
          type: string
          readOnly: true
          example: Example Buyer
      required:
        - buyerName
security:
  - ApiKeyHeader: []
"
`;
