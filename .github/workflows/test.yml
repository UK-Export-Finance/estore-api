# eStore Git Hub Actions
#####################################
# This GHA is responsible for initiating various test suites
# upon a PR creation. Following test suites are executed:
# 1. Unit tests (Jest)
# 2. API tests (Jest)
# 3. E2E tests (Jest)

name: Quality Assurance - Tests
run-name: Executing test QA on ${{ github.repository }} üöÄ

on:
  pull_request:
    branches: [main]
    paths:
      - '.github/workflows/test.yml'
      - 'src/**'
      - 'test/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'package*'
      - 'tsconfig*'
      - 'jest.config.ts'
      - 'nest.cli.json'

env:
  environment: 'qa'
  timezone: 'Europe/London'
  node: ${{ vars.NODE_VERSION }}

jobs:
  # 1. Setup test infrastructure
  setup:
    name: Infrastructure setup üîß
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ env.environment }}
      timezone: ${{ env.timezone }}
    steps:
      - name: Environment üß™
        run: echo "Environment set to ${{ env.environment }}"

      - name: Timezone üåê
        run: echo "Timezone set to ${{ env.timezone }}"

  # 2. Unit tests
  unit-tests:
    name: Unit üë∑
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Repository
        uses: actions/checkout@v3

      - name: Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node }}

      - name: Dependencies
        working-directory: ./
        run: npm ci

      - name: Execute
        working-directory: ./
        run: npm run unit-test

  # 3. API tests
  api-tests:
    name: API üë∑
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Repository
        uses: actions/checkout@v3

      - name: Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node }}

      - name: Dependencies
        working-directory: ./
        run: npm ci

      - name: Execute
        working-directory: ./
        run: npm run api-test

  # 4. E2E tests
  e2e-tests:
    name: E2E üßë‚Äçüíª
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Repository
        uses: actions/checkout@v3

      - name: Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node }}

      - name: Dependencies
        working-directory: ./
        run: npm ci

      - name: Docker
        working-directory: ./
        env:
          PORT: ${{ secrets.PORT }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          TZ: ${{ secrets.TZ }}
          LOG_LEVEL: ${{ vars.LOG_LEVEL }}
          SWAGGER_USER: ${{ secrets.SWAGGER_USER }}
          SWAGGER_PASSWORD: ${{ secrets.SWAGGER_PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
          GRAPH_BASE_URL: ${{ secrets.GRAPH_BASE_URL }}
          GRAPH_AUTHENTICATION_TENANT_ID: ${{ secrets.GRAPH_AUTHENTICATION_TENANT_ID }}
          GRAPH_AUTHENTICATION_CLIENT_ID: ${{ secrets.GRAPH_AUTHENTICATION_CLIENT_ID }}
          GRAPH_AUTHENTICATION_CLIENT_SECRET: ${{ secrets.GRAPH_AUTHENTICATION_CLIENT_SECRET }}
          SHAREPOINT_MAIN_SITE_NAME: ${{ secrets.SHAREPOINT_MAIN_SITE_NAME }}
          SHAREPOINT_TFIS_SITE_NAME: ${{ secrets.SHAREPOINT_TFIS_SITE_NAME }}
          SHAREPOINT_TFIS_LIST_ID: ${{ secrets.SHAREPOINT_TFIS_LIST_ID }}
          MDM_BASE_URL: ${{ secrets.MDM_BASE_URL }}
          MDM_API_KEY_HEADER_NAME: ${{ secrets.MDM_API_KEY_HEADER_NAME }}
          MDM_API_KEY_HEADER_VALUE: ${{ secrets.MDM_API_KEY_HEADER_VALUE }}
          MDM_MAX_REDIRECTS: ${{ secrets.MDM_MAX_REDIRECTS }}
          MDM_TIMEOUT: ${{ secrets.MDM_TIMEOUT }}
        run: docker-compose up --build -d

      - name: Execute
        working-directory: ./
        run: npm run e2e-test
